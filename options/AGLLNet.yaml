# general settings

name: &arch_type CodeEnhance_arch  
model_type: CodeEnhance_Model
scale: &upscale 1
num_gpu: 1 # set num_gpu: 0 for cpu mode
manual_seed: 0
debug: false

# dataset and data loader settings
datasets:
  train:
    name: AGLLNet_v2_Dataset
    type: AGLLNet_v2_Dataset  # AGLLNetDataset
    dataroot: /home/wuxu/datasets/LL/AGLLNet/ # /home/wuxu/datasets/LL/AGLLNet/

    reference_path: /home/wuxu/datasets/LL/AGLLNet/

    is_noise: &is_noise true    # 是否有噪声
    io_backend:
      type: disk
 
    gt_size: 256
    use_resize_crop: true
    use_flip: true
    use_rot: false

    # data loader
    use_shuffle: true
    batch_size_per_gpu: 8  # &bsz 4
    num_worker_per_gpu: 4  # *bsz
    dataset_enlarge_ratio: 1

    prefetch_mode: ~
#    num_prefetch_queue: *bsz

  val:
    name: AGLLNet_v2_Dataset
    type: AGLLNet_v2_Dataset
    dataroot: /home/wuxu/datasets/LL/AGLLNet/
    is_reference: true
    reference_path: /home/wuxu/datasets/LL/AGLLNet/test_enhance
    is_noise: *is_noise

    beta_range: [0.3, 1.5]
    A_range: [0.25, 1.0]
    color_p: 1.0
    color_range: [-0.025, 0.025]
    io_backend:
      type: disk

# network structures
network_g:
  type: *arch_type
  gt_resolution: 256
  norm_type: 'gn'
  act_type: 'silu'
  scale_factor: *upscale
  weight_codebook_flag: true
  weight_texture: 1
  weight_style: 1
  codebook_params:
    - [64, 1024, 512]

  LQ_stage: true
  use_weight: false
  use_semantic_loss: false

  weight_alpha: -1.0
  frozen_module_keywords: ['quantize', 'decoder_group', 'after_quant_group', 'out_conv']


network_d:
  type: UNetDiscriminatorSN 
  num_in_ch: 512

network_domain_d:
  type: DomainDiscriminator 
  num_in_ch: 256


seg:
  name: deeplabv3plus_mobilenet
  num_classes: 19
  output_stride: 16
  separable_conv: False
  num_gpus: gpusX
  pretrain: True
  lr: 0.01
  lr_policy: poly
  loss_type: cross_entropy
  weight_decay: 0.0001
  ckpt: /home/wuxu/codes/ACMMM2023/checkpoints/best_deeplabv3plus_mobilenet_cityscapes_os16.pth
  continue_training: False

# path
path:
  pretrain_network_hq: /home/wuxu/codes/CodeEnhance/pretrain_networks/pretrained_HQPs.pth
  pretrain_network_g: 
  pretrain_network_d: ~
  strict_load: false 
#  resume_state: ~

# training settings

# training settings
train:
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0.0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 4e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_domain_d:
    type: Adam
    lr: !!float 4e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [5000, 10000, 15000, 20000, 250000, 300000, 350000]
    gamma: 1 

  total_iter: 50000 # 45000
  train_light_filter_iter: 10000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0 
    reduction: mean

#
  perceptual_opt:
    type: LPIPSLoss
    loss_weight: 1


  gan_opt:
    type: GANLoss
    gan_type: hinge
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: 0.1

  codebook_opt:
    loss_weight: 1.0
  
  # semantic_opt:
  #   loss_weight: 0.1 

  net_d_iters: 1
  net_d_init_iters: !!float 0 

# validation settings·
val:
  val_freq: 5000    # 5000
  save_img: true

  key_metric: psnr
  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0    # RIDP： crop_border为 4 ，test_y_channel为 true，retinexformer：crop_border为 0 ，test_y_channel为 false，计算时psnr，ssim的值会小一点
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 0    # 4
      test_y_channel: false
#    lpips:
#      type: lpips
#      better: lower

# logging settings
logger:
  print_freq: 10
  save_checkpoint_freq: !!float 5e3
  save_latest_freq: !!float 5e2
  show_tf_imgs_freq: !!float 1e3
#  show_tf_imgs_freq: 1
  use_tb_logger: true
